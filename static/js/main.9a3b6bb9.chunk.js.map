{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.1.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","onItemChange","amountPages","Math","floor","pageHendler","event","selectPage","currentTarget","innerText","pages","amountOfli","startIndex","min","getList","_amountOfli","_slicedToArray","items","map","concat","useEffect","_jsxs","_Fragment","children","className","_jsx","cn","disabled","href","onClick","page","active","length","item","App","_useState","useState","_useState2","setPerPage","_useState3","_useState4","setCurrentPage","_useState5","_useState6","setItem","id","onChange","selectValue","value","defaultValue","opt","htmlFor","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a3b6bb9.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getList(\n  currentPage: number,\n  total: number,\n  perPage: number,\n) : number[] {\n  const startIndex = (currentPage - 1) * perPage;\n  const endIndex = Math.min(startIndex + perPage, total);\n\n  return [startIndex + 1, endIndex];\n}\n","import cn from 'classnames';\nimport { useEffect } from 'react';\n\nimport { getNumbers, getList } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n  onItemChange: (el1: number[]) => void\n}\n\nexport const Pagination = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n    onItemChange,\n  }: Props,\n) => {\n  const amountPages = total % perPage === 0\n    ? Math.floor(total / perPage)\n    : Math.floor(total / perPage) + 1;\n\n  function pageHendler(event: React.MouseEvent<HTMLAnchorElement>) {\n    const selectPage = +event.currentTarget.innerText;\n\n    onPageChange(selectPage);\n  }\n\n  const pages = getNumbers(1, amountPages);\n\n  const amountOfli = getList(currentPage, total, perPage);\n\n  const [start, end] = amountOfli;\n\n  const items = getNumbers(start, end).map(n => `Item ${n}`);\n\n  function arrowHendlerLeft(event: React.MouseEvent<HTMLElement>) {\n    if (event && currentPage > pages[0]) {\n      onPageChange(currentPage - 1);\n    }\n  }\n\n  function arrowHendlerRight(event: React.MouseEvent<HTMLElement>) {\n    if (event && currentPage < amountPages) {\n      onPageChange(currentPage + 1);\n    }\n  }\n\n  useEffect(() => {\n    onItemChange(amountOfli);\n  }, [currentPage, perPage]);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn('page-item', { disabled: currentPage === 1 })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={arrowHendlerLeft}\n          >\n            «\n          </a>\n        </li>\n        { pages.map(page => (\n          <li\n            className={cn('page-item', { active: page === currentPage })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={pageHendler}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={cn(\n          'page-item', { disabled: currentPage > pages.length - 1 },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage > pages.length - 1}\n            onClick={arrowHendlerRight}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState<number>(5);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [item, setItem] = useState<number[]>([1, 5]);\n  const total = 42;\n  const options = ['3', '5', '10', '20'];\n\n  const onPageChange = (page: number) => {\n    if (\n      currentPage !== page\n    ) {\n      setCurrentPage(page);\n    }\n  };\n\n  const onItemChange = (el: number[]) => {\n    setItem(el);\n  };\n\n  function selectHendler(event: React.ChangeEvent<HTMLSelectElement>) {\n    const selectValue = +event.currentTarget.value;\n\n    setPerPage(selectValue);\n    setCurrentPage(1);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${item[0]} - ${item[1]} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={selectHendler}\n            defaultValue={5}\n          >\n            {options.map(opt => (\n              <option\n                value={opt}\n                key={opt}\n              >\n                {opt}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n        onItemChange={onItemChange}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App.1';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}